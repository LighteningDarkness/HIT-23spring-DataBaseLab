# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Major Courses\DataBase\lab\LAB2\LAB2-code\flight_query.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import pymysql
from PyQt5.QtWidgets import QMessageBox
from ui_table import table
class FlightQuery(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1116, 714)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(290, 170, 80, 30))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(290, 270, 80, 30))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(420, 160, 113, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(420, 260, 113, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(240, 50, 600, 80))
        self.textEdit.setObjectName("textEdit")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton.setGeometry(QtCore.QRect(320, 380, 186, 41))
        self.commandLinkButton.setObjectName("commandLinkButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1116, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.commandLinkButton.clicked.connect(self.query)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "航班查询"))
        self.label.setText(_translate("MainWindow", "出发城市"))
        self.label_2.setText(_translate("MainWindow", "到达城市"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600;\">请输入出发地和目的地</span></p></body></html>"))
        self.commandLinkButton.setText(_translate("MainWindow", "确认"))
    #连接查询
    def query(self):
        departure=self.lineEdit.text()
        achieve=self.lineEdit_2.text()
        self.window=QtWidgets.QMainWindow()
        #空值控制
        if departure=="" or achieve=="":
            QMessageBox.warning(self.window,"ERROR!","请输入完整信息!")
        else:
            con = pymysql.connect(host='localhost', port=3306, user='root', password='000000', charset='utf8',database='airlines')  # 连接数据库
            #关系自然连接
            sql=f"select flight.fno,ttime,ltime,state,model from takeoff,landon,airport as S,airport as T,plane,flight,execute \
                where takeoff.fno=landon.fno and takeoff.aname=S.aname and landon.aname=T.aname and flight.fno=takeoff.fno and flight.fno=landon.fno and flight.fno=execute.fno and execute.planeid=plane.planeid and S.city='{departure}' and T.city='{achieve}'"
            df=pd.read_sql(sql,con)
            self.form=QtWidgets.QWidget()
            self.table=table()
            self.table.setupUi(self.form,len(df),len(df.columns),[x for x in range(1,len(df)+1)],["航班号","起飞时间","降落时间","状态","机型"])
            #绘制表格
            for i in range(len(df)):
                for j in range(len(df.columns)):
                    self.table.tableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(str(df.iat[i,j]).strip()))
            self.form.show()
            con.close()

