# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Major Courses\DataBase\lab\LAB2\LAB2-code\return_flight.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql
import pandas as pd
from PyQt5.QtWidgets import QMessageBox

class ReturnFlight(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 669)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(310, 140, 600, 80))
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(270, 260, 54, 30))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(270, 340, 54, 30))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(390, 260, 231, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(390, 340, 231, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton.setGeometry(QtCore.QRect(410, 440, 186, 41))
        self.commandLinkButton.setObjectName("commandLinkButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 896, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.commandLinkButton.clicked.connect(self.return_flight)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "退订航班"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600;\">请输入相关信息</span></p></body></html>"))
        self.label.setText(_translate("MainWindow", "身份证号"))
        self.label_2.setText(_translate("MainWindow", "航班号"))
        self.commandLinkButton.setText(_translate("MainWindow", "确定退票"))
    
    def return_flight(self):
        pid=self.lineEdit.text()
        fno=self.lineEdit_2.text()
        if pid=="" or fno=="":
            self.window=QtWidgets.QMainWindow()
            QMessageBox.warning(self.window,"ERROR","请输入非空值")
        elif len(pid)!=18:
            self.window=QtWidgets.QMainWindow()
            QMessageBox.warning(self.window,"ERROR","请输入正确形式")
        else:
            con = pymysql.connect(host='localhost', port=3306, user='root', password='000000', charset='utf8',database='airlines')  # 连接数据库
            sql=f"select * from ttf where fno='{fno}' and PID='{pid}'"
            df=pd.read_sql(sql,con)
            if len(df)==0:
                self.window=QtWidgets.QMainWindow()
                QMessageBox.warning(self.window,"useless","无该乘坐信息，无需删除")
            else:
                cur=con.cursor()
                cur.execute(f"delete from ttf where fno='{fno}' and PID='{pid}'")
                con.commit()
                cur.close()
                con.close()
                self.window=QtWidgets.QMainWindow()
                QMessageBox.information(self.window,"success","成功删除")
        
