# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Major Courses\DataBase\lab\LAB2\LAB2-code\create_view.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql
import pandas as pd
from PyQt5.QtWidgets import QMessageBox
class CreateView(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(909, 625)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(190, 80, 561, 3000))
        self.textEdit.setObjectName("textEdit")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(390, 250, 371, 41))
        self.lineEdit.setObjectName("lineEdit")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton.setGeometry(QtCore.QRect(420, 400, 186, 41))
        self.commandLinkButton.setObjectName("commandLinkButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 909, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.commandLinkButton.clicked.connect(self.create_view)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Create View"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600;\">目前支持对特定航司航班查询，请输入完整IATA代码：</span></p></body></html>"))
        self.commandLinkButton.setText(_translate("MainWindow", "确认"))
    
    def create_view(self):
        IATA=self.lineEdit.text()
        if IATA=="": #空值约束
            self.window=QtWidgets.QMainWindow()
            QMessageBox.warning(self.window,"ERROR","请输入非空值！")
            return
        con = pymysql.connect(host='localhost', port=3306, user='root', password='000000', charset='utf8',database='airlines')
        df=pd.read_sql(f"select * from information_schema.VIEWS where TABLE_SCHEMA='airlines' and TABLE_NAME='{IATA}flight'",con)
        if len(df)!=0:  #查询视图是否已存在
            self.window=QtWidgets.QMainWindow()
            QMessageBox.warning(self.window,"useless","视图已存在")
        else:   #正常情况
            cur=con.cursor()
            sql1="select flight.fno,S.aname as sa,ttime,T.aname as ta,ltime,state,model from takeoff,landon,airport as S,airport as T,plane,flight,execute,setup \
                where takeoff.fno=landon.fno and takeoff.aname=S.aname and landon.aname=T.aname and flight.fno=takeoff.fno and flight.fno=landon.fno and flight.fno=execute.fno and execute.planeid=plane.planeid and setup.fno=flight.fno and IATA='{IATA}'"
            cur.execute(f"create view {IATA}flight as {sql1}")
            self.window=QtWidgets.QMainWindow()
            QMessageBox.information(self.window,"success","视图已创建")
            con.commit()
            cur.close()
            con.close()